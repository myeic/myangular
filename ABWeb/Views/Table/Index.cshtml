@{
    Layout = null;
}

<!DOCTYPE html>

<html ng-app="myNgtableApp">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>My Angular NgTable</title>
    <link href="@Url.Content("~/Content/bootstrap/css/bootstrap.min.css")" type="text/css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap-additions/dist/bootstrap-additions.min.css")" type="text/css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/font-awesome/css/font-awesome.min.css")" type="text/css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/angular-ngtable/dist/ng-table.min.css")" type="text/css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/angular-ngtable/dist/docs.css")" type="text/css" rel="stylesheet" />

    <script src="@Url.Content("~/Scripts/jquery-2.1.4.js")"></script>
    <script src="@Url.Content("~/Content/underscore/underscore-min.js")"></script>
    <script src="@Url.Content("~/Content/bootstrap/js/bootstrap.min.js")"></script>
    <script src="@Url.Content("~/Scripts/angular.min.js")"></script>
    <script src="@Url.Content("~/Scripts/angular-route.min.js")"></script>
    <script src="@Url.Content("~/Scripts/angular-animate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/angular-sanitize.min.js")"></script>
    <script src="@Url.Content("~/Scripts/angular-messages.min.js")"></script>
    <script src="@Url.Content("~/Scripts/angular-resource.min.js")"></script>
    <script src="@Url.Content("~/Scripts/angular-ui/ui-bootstrap.min.js")"></script>
    <script src="@Url.Content("~/Scripts/angular-ui/ui-bootstrap-tpls.min.js")"></script>
    <script src="@Url.Content("~/Content/angular-ngtable/dist/ng-table.min.js")"></script>


    <script src="@Url.Content("~/Scripts/controller/myNgtableApp.js")"></script>
</head>
<body>
    <div class="container-fluid">
        <div class="row" ng-controller="clockCtrl">
            <h1 class="text-success">请使用NgTable <span class="text-danger">{{clock}}</span></h1>
            
        </div>
        <section class="row" ng-controller="introController">
            <div class="col-md-4">
                <h3>NgTable 的例子</h3>
            </div>
            <div class="col-md-7">
                <table ng-table="tableParams" class="table" data-show-filter="true">
                    <tr ng-repeat="user in $data">
                        <td title="'Name'" filter="{ name: 'text'}" data-sortable="'name'">
                            {{user.name}}
                        </td>
                        <td title="'Age'" filter="{ age: 'number'}" data-sortable="'age'">
                            {{user.age}}
                        </td>
                    </tr>
                </table>
            </div>
        </section>
        <section class="row" ng-controller="lasyLoadingCtrl">
            <div class="col-md-4">
                <h3 class="success">Lazy loading managed array</h3>
            </div>
            <div class="col-md-7">
                <h2 class="page-header">Lazy loading managed array</h2>
                <div class="bs-callout bs-callout-info">
                    <h4>Overview</h4>
                    <p>You are not limited to having the data array to hand at the time when <code>NgTableParams</code> is created. So for example you could load the data using <code>$http</code> and then hand this to <code>NgTableParams</code></p>
                </div>
                <div class="form-inline" style="margin-bottom: 20px">
                    <div class="form-group">
                        <label for="datasets">Select dataset</label>
                        <select id="datasets" class="form-control" ng-model="tbl.dataset" ng-options="ds for ds in tbl.datasets"
                                ng-change="tbl.changeDs()"></select>
                    </div>
                </div>
                <table ng-table="tbl.tableParams" class="table table-condensed table-bordered table-striped">
                    <tr ng-repeat="row in $data">
                        <td data-title="'Name'" filter="{name: 'text'}" data-sortable="'name'">{{row.name}}</td>
                        <td data-title="'Age'" filter="{age: 'number'}" data-sortable="'age'">{{row.age}}</td>
                        <td data-title="'Money'" filter="{money: 'number'}" data-sortable="'money'">{{row.money}}</td>
                    </tr>
                </table>
            </div>
        </section>

        <section class="row" ng-controller="loadFromServerCtrl">
            <div class="col-md-4">
                <h3 class="success">Load data from server</h3>
            </div>
            <div class="col-md-7">
                <h2 class="page-header">Loading data - From Server</h2>
                <div class="bs-callout bs-callout-info">
                    <h4>Overview</h4>
                    <p>Hand <code>NgTableParams</code> a custom <code>getData</code> function that it will call to load data into the table. Typically you will use this option to load server-side data</p>
                </div>
                <table ng-table="tableParams" class="table table-bordered table-striped table-condensed">
                    <tr ng-repeat="row in $data">
                        <td data-title="'Installation At'" filter="{installationAt: 'text'}" data-sortable="'installationAt'">{{row.installationAt}}</td>
                        <td data-title="'Admin Email'" filter="{adminEmail: 'text'}" data-sortable="'adminEmail'">{{row.adminEmail}}</td>
                        <td data-title="'Powered By'" filter="{poweredBy: 'text'}" data-sortable="'poweredBy'">{{row.poweredBy}}</td>
                        <td data-title="'Powered By Icon'" filter="{poweredByIcon: 'text'}" data-sortable="'poweredByIcon'">{{row.poweredByIcon}}</td>
                    </tr>
                </table>
            </div>
        </section>

        <section id="basePangination" class="row" ng-controller="basePanginationCtrl">
            <div class="col-md-4">
                <h3 class="text-success">NgTable Pangination Base</h3>
            </div>
            <div class="col-md-7">
                <h2 class="page-header">Pagination - basic example</h2>
                <div class="bs-callout bs-callout-info">
                    <h4>Overview</h4>
                    <p><code>ngTable</code> supplies a pager to browse one "chunk" of data at a time. </p>
                    <p>Supply an initial paging configuration to the <code>NgTableParams</code> constructor call. As required, you can then change this configuration "on the fly".</p>
                </div>
                <div class="bs-callout bs-callout-warning">
                    <h4>Got a <code>getData</code> function?</h4>
                    <p>Got your own <code>getData</code> function? Then you need to tell <code>NgTableParams</code> the total number of records that match its <code>filter</code>.</p>
                    <p>You do this by calling <code>NgTableParams.total()</code>. See <a href="http://codepen.io/christianacca/pen/mJoGPE" target="_">this codepen</a> for an example.</p>
                </div>
                <h3>Default configuration</h3>
                <table ng-table="defaultConfigTableParams" class="table table-condensed table-bordered table-striped">
                    <tr ng-repeat="row in $data">
                        <td data-title="'Name'">{{row.name}}</td>
                        <td data-title="'Age'">{{row.age}}</td>
                    </tr>
                </table>
                <h3>Customized configuration</h3>
                <table ng-table="customConfigParams" class="table table-condensed table-bordered table-striped">
                    <tr ng-repeat="row in $data">
                        <td data-title="'Name'">{{row.name}}</td>
                        <td data-title="'Money'">{{row.money}}</td>
                    </tr>
                </table>
            </div>
        </section>

        <section id="changePage programmatically" class="row" ng-controller="changePageCtrl">
            <div class="col-md-4">
                <h3 class="text-success">NgTable change page programmatically</h3>
            </div>
            <div class="col-md-7">
                <h2 class="page-header">Change page / page controls programmatically</h2>
                <div class="bs-callout bs-callout-info">
                    <h4>Overview</h4>
                    <p>The current page displayed by the table, along with the pager controls can be changed programatically using the <code>NgTableParams</code> API</p>
                </div>
                <div>
                    <div class="panel-heading">
                        Current page <i class="pull-right glyphicon"></i>
                    </div>
                    <div class="panel-body">
                        <form class="form-inline" novalidate>
                            <div class="form-group">
                                <label for="pageBinding">Set via bindings</label>
                                <input type="number" class="form-control" id="pageBinding" min="1" placeholder="page #" ng-model="tableParams.page" ng-model-options="{ getterSetter: true }">
                            </div>
                            <div class="form-group">
                                <label for="page">Set via JS</label>
                                <input type="number" class="form-control" id="page" min="1" placeholder="page #" ng-model="nextPageNum" ng-change="changePage(nextPageNum)">
                            </div>
                        </form>
                    </div>
                    <hr />
                    <div class="panel-heading">
                        Current page size <i class="pull-right glyphicon"></i>
                    </div>
                    <div class="panel-body">
                        <form class="form-inline" novalidate>
                            <div class="form-group">
                                <label for="pageSizeBinding">Set via bindings</label>
                                <select id="pageSizeBinding" class="form-control input-sm" ng-model="tableParams.count" ng-model-options="{ getterSetter: true}" ng-options="size for size in tableParams.settings().counts"></select>
                            </div>
                            <div class="form-group">
                                <label for="pageSize">Set via JS</label>
                                <select id="pageSizeBinding" class="form-control" ng-model="newPageSize" ng-options="size for size in tableParams.settings().counts" ng-change="changePageSize(newPageSize)"></select>
                            </div>
                        </form>
                    </div>
                    <hr />
                    <div class="panel-heading">
                        Page size buttons <i class="pull-right glyphicon"></i>
                    </div>
                    <div class="panel-body">
                        <form class="form-inline" novalidate>
                            <div class="form-group">
                                <label for="pageSizeBinding">Select page sizes:</label>
                                <select id="pageSizeBinding" multiple class="form-control input-sm" ng-model="selectedPageSizes" ng-options="size for size in availablePageSizes" ng-change="changePageSizes(selectedPageSizes)" style="min-height: 80px"></select>
                            </div>
                        </form>
                    </div>


                    <table ng-table="tableParams" class="table table-condensed table-bordered table-striped">
                        <tr ng-repeat="row in $data">
                            <td data-title="'Name'">{{row.name}}</td>
                            <td data-title="'Age'">{{row.age}}</td>
                            <td data-title="'Money'">{{row.money}}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </section>

        <section id="baseSorting" class="row">
            <div class="col-md-4">
                <h3 class="text-success">NgTable Sorting Base</h3>
            </div>
            <div class="col-md-7">
                <h2 class="page-header">Sorting - basic example</h2>
                <div class="bs-callout bs-allout-info">
                    <h4>Overview</h4>
                    <p><code>ngTable</code> provides a header template that adds sorting to a html table</p>
                    <ul>
                        <li>Specify which column should be sortable</li>
                        <li>Optionally supply the initial columns to sort to the <code>NgTableParams</code> constructor call</li>
                    </ul>
                </div>
                <div class="bs-callout bs-callout-warning">
                    <h4>Got a <code>getData</code> function?</h4>
                    <p>In this case you'll need to apply the values from <code>NgTableParams.sorting()</code> to the data you want to display in your table. This is typically the case when the data is being fetched from the server.</p>
                </div>
                <div ng-controller="baseSortingCtrl">
                    <h3>ngTable directive</h3>
                    <table ng-table="tableParams" class="table table-condensed table-bordered table-striped">
                        <tr ng-repeat="row in $data">
                            <td data-title="'Name'" data-sortable="'name'">{{row.name}}</td>
                            <td data-title="'Age'" data-sortable="'age'">{{row.age}}</td>
                            <td data-title="'Money'">{{row.money}}</td>
                        </tr>
                    </table>
                </div>
                <div ng-controller="baseDynamicSortingCtrl">
                    <h3>ngTableDynamic directive</h3>
                    <table ng-table-dynamic="tableParams with cols" class="table table-condensed table-bordered table-striped">
                        <tr ng-repeat="row in $data">
                            <td ng-repeat="col in $columns">{{row[col.field]}}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </section>

        <section id="sortOrderPragrammatically" class="row">
            <div class="col-md-4">
                <h3 class="text-success">NgTable Change sort order programmatically</h3>
            </div>
            <div class="col-md-7">
                <script type="text/ng-template" id="columnsSorter.html">
                    <ul class="list-group">
                        <li class="list-group-item form-inline" ng-repeat="col in dctrl.columns">
                            <label class="checkbox-inline">
                                <input type="checkbox" ng-checked="dctrl.params.isSortBy(col.field)" ng-disabled="!col.sortable" ng-click="dctrl.applySort(dctrl.columns, dctrl.params, col)" /> {{col.title}}
                            </label>
                            <div class=pull-right>
                                <label class="radio-inline">
                                    <input type="radio" value="asc" ng-disabled="!col.sortable" ng-model="dctrl.currentSorting[col.field]"> Asc
                                </label>
                                <label class="radio-inline">
                                    <input type="radio" value="desc" ng-disabled="!col.sortable" ng-model="dctrl.currentSorting[col.field]"> Desc
                                </label>
                            </div>
                        </li>
                    </ul>
                </script>

                <h2 class="page-header">Change sort order programmatically</h2>
                <div class="col-md-12">
                    <div class="bs-callout bs-callout-info">
                        <h4>Overview</h4>
                        <p>The current column sort order can be changed programatically using the <code>NgTableParams</code> API</p>
                    </div>
                </div>
                
                <div ng-controller="changeSortOrderCtrl">
                    <h3>
                        ngTable directive
                        <button class="btn btn-primary btn-sm pull-right"
                                ng-disabled="!demo.tableParams.orderBy().length"
                                ng-click="demo.tableParams.sorting({})">
                            <span class="glyphicon glyphicon-remove"></span>
                            Clear sorting
                        </button>
                    </h3>
                    <div class="panel-heading panel-success">
                        Basic example <i class="pull-right glyphicon" ng-class="{'glyphicon-chevron-down': isBasicOpen, 'glyphicon-chevron-right': !isBasicOpen}"></i>
                    </div>
                    <div class="panel-body panel-info">
                        <form class="form-inline" name="demo.newSortForm" novalidate>
                            <div class="form-group">
                                <label for="pageBinding">Select sort:</label>
                                <select class="form-control" ng-model="newSort" ng-options="col.field as col.field for col in cols" name="newSort">
                                    <option style="display: none" value="" />
                                </select>
                            </div>
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" ng-model="isSortDesc" name="isSortDesc"> Desc
                                </label>
                            </div>
                            <button class="btn btn-default" ng-click="applySelectedSort()" ng-disabled="newSortForm.$pristine">Apply</button>
                        </form>
                    </div>
                    <div class="panel-heading panel-success">
                        Advanced example <i class="pull-right glyphicon" ng-class="{'glyphicon-chevron-down': isAdvancedOpen, 'glyphicon-chevron-right': !isAdvancedOpen}"></i>
                    </div>
                    <div class="panel-body panel-info">
                        @*<demo-columns-sorter params="demo.tableParams" columns="demo.cols"></demo-columns-sorter>*@
                    </div>
                    <table ng-table="tableParams" class="table table-condensed table-bordered table-striped">
                        <tr ng-repeat="row in $data">
                            <td data-title="'Name'" data-sortable="sortables.name.sortable">{{row.name}}</td>
                            <td data-title="'Age'" data-sortable="sortables.age.sortable">{{row.age}}</td>
                            <td data-title="'Money'" data-sortable="sortables.money.sortable">{{row.money}}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </section>

        <section id="sortingEnablePragrammaitically" class="row">
            <div class="col-md-4">
                <h3 class="text-success">NgTable Enable sorting programmatically</h3>
            </div>
            <div class="col-md-7">
                <div ng-controller="enableSortingCtrl as demo">
                    <h2 class="page-header">Enable sorting programmatically</h2>
                    <div class="bs-callout bs-callout-info">
                        <h4>Overview</h4>
                        <p>Column sorting can be enabled/disabled programmatically at runtime.</p>
                    </div>
                    <h3>ngTable directive</h3>
                    <div style="margin-bottom: 20px">
                        <label class="checkbox-inline" ng-repeat="$column in demo.boundCols">
                            <input type="checkbox" ng-checked="$column.sortable()"
                                   ng-click="demo.toggleSortability($column)" /> {{$column.title()}}
                        </label>
                    </div>
                    <table ng-table="demo.tableParams" class="table table-condensed table-bordered table-striped"
                           ng-table-columns-binding="demo.boundCols">
                        <!-- assigning widths prevent columns size changing when sortability is toggled -->
                        <colgroup>
                            <col style="width:33.33%" />
                            <col style="width:33.33%" />
                            <col style="width:33.33%" />
                        </colgroup>
                        <tr ng-repeat="row in $data">
                            <td data-title="'Name'" data-sortable="'name'">{{row.name}}</td>
                            <td data-title="'Age'"  data-sortable="'age'">{{row.age}}</td>
                            <td data-title="'Money'" data-sortable="'money'">{{row.money}}</td>
                        </tr>
                    </table>
                </div>
                <div ng-controller="enableSortingDynamicSortingCtrl as demo">
                    <h3>ngTableDynamic directive</h3>
                    <div style="margin-bottom: 20px">
                        <label class="checkbox-inline" ng-repeat="col in demo.cols">
                            <input type="checkbox" ng-checked="col.sortable == col.field" ng-click="demo.toggleSortability(col)" /> {{col.title}}
                        </label>
                    </div>
                    <table ng-table-dynamic="demo.tableParams with demo.cols"
                           class="table table-condensed table-bordered table-striped">
                        <!-- assigning widths prevent columns size changing when sortability is toggled -->
                        <colgroup>
                            <col style="width:33.33%"/>
                            <col style="width:33.33%"/>
                            <col style="width:33.33%"/>
                        </colgroup>
                        <tr ng-repeat="row in $data">
                            <td ng-repeat="col in $columns">{{row[col.field]}}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </section>


        <section class="row">
            <div class="col-md-4">
                <h3 class="text-success">NgTable Filtering - basic example</h3>
            </div>
            <div class="col-md-7">
                <h2 class="page-header">Filtering - basic example</h2>
                <div class="bs-callout bs-callout-info">
                    <h4>Overviews</h4>
                    <p><code>ngTable</code> provides a header template that adds filtering to a html table.</p>
                    <ul>
                        <li>Specify which column should recieve a filter and the template that this filter should use</li>
                        <li><code>ngTable</code> module supplies filter templates for common input types such as number, text, select and select-multiple</li>
                        <li>Optionally supply the initial column filter <em>values</em> to the <code>NgTableParams</code> constructor call</li>
                    </ul>
                </div>
                <div class="bs-callout bs-callout-warning">
                    <h4>Got a <code>getData</code> function?</h4>
                    <p>In this case you'll need to apply the values from <code>NgTableParams.filters()</code> to the data you want to display in your table. This is typically the case when the data is being fetched from the server</p>
                </div>
                <div ng-controller="baseFilterCtrl as demo">
                    <h3>ngTable directive</h3>
                    <table ng-table="demo.tableParams" class="table table-condensed table-bordered table-striped">
                        <tr ng-repeat="row in $data">
                            <td data-title="'Name'" filter="{name: 'text'}">{{row.name}}</td>
                            <td data-title="'Age'" filter="{age: 'number'}">{{row.age}}</td>
                            <td data-title="'Money'">{{row.money}}</td>
                            <td data-title="'Country'" filter="{ country: 'select'}" data-filter-data="demo.countries">{{row.country}}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </section>
        <section class="row">
            <div class="col-md-4">
                <h3 class="text-success">NgTable Pangination Base</h3>
            </div>
            <div class="col-md-7">

            </div>
        </section>
        <section class="row">
            <div class="col-md-4">
                <h3 class="text-success">NgTable Pangination Base</h3>
            </div>
            <div class="col-md-7">

            </div>
        </section>
        <section class="row">
            <div class="col-md-4">
                <h3 class="text-success">NgTable Pangination Base</h3>
            </div>
            <div class="col-md-7">

            </div>
        </section>
    </div>
</body>
</html>
